name: Test-on-windows-MSVC-64bit

# TODO: should be merged with linux workflow as matrix build

on: [push, workflow_dispatch]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Debug

jobs:
  build-and-test:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow#configuring-a-build-matrix
    runs-on: windows-latest
    timeout-minutes: 15

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}

    - name: Install Dependencies
      # install libpcap and its development files
#      run: vcpkg install winpcap:x64-windows
      run: Invoke-WebRequest -Uri "https://nmap.org/dist/nmap-7.12-setup.exe" -OutFile "nmap.exe"; nmap-7.12-setup.exe /S

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/tcppump
      run: cmake -S src -B build -DWITH_UNITTESTS=1 -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DPCAP_INCLUDE_DIR=C:/vcpkg/packages/winpcap_x64-windows/include/ -DPCAP_LIBRARY=C:/vcpkg/packages/winpcap_x64-windows/lib/ -DTEST_NET_ADAPTER=Ethernet

    - name: Build
      working-directory: ${{runner.workspace}}/tcppump
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build build --config $BUILD_TYPE

    - name: Prepare Test Environment
      working-directory: ${{runner.workspace}}/tcppump/bin
      shell: bash
      run: cp C:/vcpkg/packages/winpcap_x64-windows/bin/*.dll .
      
    - name: Execute Unit Tests
      working-directory: ${{runner.workspace}}/tcppump/bin
      shell: bash
      # Execute unittest binary  
      run: ./unittest

# always fails because of missing installed winpcap
#    - name: Test
#      working-directory: ${{runner.workspace}}/tcppump/build
#      shell: bash
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
#      run: ctest -C $BUILD_TYPE
      
    - uses: actions/upload-artifact@v2
      with: 
        name: generated binaries
        path: ${{runner.workspace}}/tcppump/bin/

    - uses: actions/upload-artifact@v2
      if: always()
      with: 
        name: logfiles
        path: |
          ${{runner.workspace}}/tcppump/build/CMakeFiles/CMakeError.log
          ${{runner.workspace}}/tcppump/build/CMakeFiles/CMakeOutput.log
          ${{runner.workspace}}/tcppump/build/Testing/Temporary/LastTest.log

