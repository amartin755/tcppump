# SPDX-License-Identifier: GPL-3.0-only
###############################################################################
#
# TCPPUMP <https://github.com/amartin755/tcppump>
# Copyright (C) 2012-2024 Andreas Martin (netnag@mailbox.org)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################

name: build-and-test

on: [push, workflow_dispatch]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        build: [Debug, Release]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Get first active Ethernet adapter name
      id: get_adapter
      shell: pwsh
      if: matrix.os == 'windows-latest'
      run: |
        $name = (Get-NetAdapter | Where-Object {$_.Status -eq "Up"} | Select-Object -First 1 -ExpandProperty Name)
        echo "adapter_name=$name" | Out-File -FilePath $env:GITHUB_OUTPUT -Append

    - name: Use adapter name
      if: matrix.os == 'windows-latest'
      run: "echo Adapter: ${{ steps.get_adapter.outputs.adapter_name }}"

    - name: Install Dependencies (linux)
      if: matrix.os == 'ubuntu-latest'
      # install libpcap and its development files
      run: sudo apt-get --assume-yes install libpcap-dev

    - name: Install Dependencies (windows)
      if: matrix.os == 'windows-latest'
      # install winpcap, we use an old version of nmap which offers an silent installer and includes winpcap
      run: Invoke-WebRequest -Uri "https://nmap.org/dist/nmap-7.12-setup.exe" -OutFile "nmap.exe"; Start-Process -Filepath "nmap.exe" -ArgumentList /S

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ matrix.build }}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --target tcppump unittest --config ${{ matrix.build }}

    - name: Assign priviledges (linux)
      if: matrix.os == 'ubuntu-latest'
      working-directory: ${{github.workspace}}/bin
      shell: bash
      # give raw capabilities to tcppump
      run: sudo setcap cap_net_raw+eip ./tcppump

    - name: Test
      working-directory: ${{github.workspace}}/build
      shell: bash
      run: ctest -C ${{ matrix.build }}

    - uses: actions/upload-artifact@v4
      if: always()
      with:
        name: logfiles-${{ matrix.build }}-${{ matrix.os }}
        path: |
          ${{github.workspace}}/build/CMakeFiles/CMakeError.log
          ${{github.workspace}}/build/CMakeFiles/CMakeOutput.log
          ${{github.workspace}}/build/Testing/Temporary/LastTest.log
