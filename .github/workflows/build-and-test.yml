# SPDX-License-Identifier: GPL-3.0-only
###############################################################################
#
# TCPPUMP <https://github.com/amartin755/tcppump>
# Copyright (C) 2012-2025 Andreas Martin (netnag@mailbox.org)
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
###############################################################################

name: build-and-test

on: [push, workflow_dispatch]

jobs:
  linux:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-22.04, ubuntu-24.04-arm]
        toolchain: [GCC, CLANG]
    name: ${{ matrix.os }}/${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Install Build Dependencies
      # install libpcap and its development files
      run: sudo apt-get --assume-yes install libpcap-dev

    - name: Configure, build and test
      working-directory: ${{github.workspace}}
      run: |
        scripts/build-and-test-${{ matrix.toolchain }}.sh

    - name: Upload logfiles
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: logfiles-${{ matrix.os }}-${{ matrix.toolchain }}
        path: |
          ${{github.workspace}}/build/CMakeFiles/CMakeError.log
          ${{github.workspace}}/build/CMakeFiles/CMakeOutput.log
          ${{github.workspace}}/build/Testing/Temporary/LastTest.log

  windows:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
#        build: [Release, Debug]
        build: [Release]
        toolchain: [msvc, ucrt64, mingw32, clang64]
    name: ${{ matrix.os }}/${{ matrix.toolchain }}/${{ matrix.build }}
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'true'

    - name: Setup environment
      id: get_adapter
      run: |
        ipconfig /all
        $name = (Get-NetAdapter | Where-Object {$_.Status -eq "Up" -and $_.InterfaceDescription -like "*Network Adapter*"} | Select-Object -First 1 -ExpandProperty Name)
        echo "adapter_name=$name" | Out-File -FilePath $env:GITHUB_OUTPUT -Append
        Invoke-WebRequest -Uri "https://nmap.org/dist/nmap-7.12-setup.exe" -OutFile "nmap.exe"; Start-Process -Filepath "nmap.exe" -ArgumentList /S

    - name: 'Setup MSYS2'
      if: matrix.toolchain != 'msvc'
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{matrix.toolchain}}
        update: true
        install: >-
          git
          make
        pacboy: >-
          toolchain:p
          cmake:p
          ninja:p

    - name: 'msys2: Configure, build and test'
      working-directory: ${{github.workspace}}
      if: matrix.toolchain != 'msvc'
      id: ctest_step
      shell: msys2 {0}
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build }} -DTEST_NET_ADAPTER="${{ steps.get_adapter.outputs.adapter_name }}"
        cmake --build build --target tcppump unittest --config ${{ matrix.build }}
        cd build
        ctest -C ${{ matrix.build }}

    - name: 'msvc: Configure, build and test'
      working-directory: ${{github.workspace}}
      if: matrix.toolchain == 'msvc'
      id: ctest_step2
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build }} -DTEST_NET_ADAPTER="${{ steps.get_adapter.outputs.adapter_name }}"
        cmake --build build --target tcppump unittest --config ${{ matrix.build }}
        cd build
        ctest -C ${{ matrix.build }}

    - name: Upload logfiles
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: logfiles-${{ matrix.build }}-${{ matrix.os }}-${{ matrix.toolchain }}
        path: |
          ${{github.workspace}}/build/CMakeFiles/CMakeError.log
          ${{github.workspace}}/build/CMakeFiles/CMakeOutput.log
          ${{github.workspace}}/build/Testing/Temporary/LastTest.log

    - name: Upload binaries in case of failed test
      uses: actions/upload-artifact@v4
      if: failure() && (steps.ctest_step.outcome == 'failure' || steps.ctest_step2.outcome == 'failure')
      with:
        name: tcppump-exe-${{ matrix.build }}-${{ matrix.os }}-${{ matrix.toolchain }}
        path: ${{ github.workspace }}\bin\
